<?php

/**
 * @file
 * Contains abs_content_file.module.
 */

//require 'vendor/autoload.php'; //../../../

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\node\NodeInterface;
use Drupal\file\FileInterface;
use Aws\S3\S3Client;


/**
 * Implements hook_help().
 */
function abs_content_file_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the abs_content_file module.
    case 'help.page.abs_content_file':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

function abs_content_file_node_presave(EntityInterface $entity){ //_update

	\Drupal::logger('content_file')->notice('hook_entity_presave: '. var_export($entity->getEntityTypeId(), true));

	if($entity->getEntityTypeId() == 'node'){

		\Drupal::logger('content_file')->notice('hasField: ' . var_export($entity->hasField('field_save_to_file'), true));

		if($entity->hasField('field_save_to_file')){
			\Drupal::logger('content_file')->notice(var_export($entity->get('field_save_to_file')->getValue(), true));	
		}
		
		//check that it has a field_save_to_file
		//and is checked
		if($entity->hasField('field_save_to_file') && $entity->get('field_save_to_file')->getValue() == true && $entity->hasField('field_s3_file')){

			\Drupal::logger('content_file')->notice('hook_node_update: '. var_export($entity->getEntityTypeId(), true));

			//render its html
			$nodeTypeId = $entity->getEntityTypeId();

			$view_builder = \Drupal::entityManager()->getViewBuilder($nodeTypeId);
	 		
	  		$view_mode = 'default';

			$build = $view_builder->view($entity, $view_mode, $entity->language()->getId());

			$rendered = drupal_render($build);

			$rendered = '<template>' . $rendered . '</template>';

			//if the node specifies a filename, use that
			if($entity->hasField('field_filename') && $entity->get('field_filename')->getValue() != null ){
				$filename = $entity->get('field_filename')->getValue();
			} elseif($entity->getTitle() != '') {
				$title = $entity->getTitle();
				$filename = \Drupal::service('pathauto.alias_cleaner')->cleanString($title);
			} else {
				$filename = $entity->id();	
			}
			$filename .= '.html';

			//get the destination from the field settings
			$fileField = $entity->field_s3_file;

			$fileSettings = $fileField->getDataDefinition()->getSettings();
			$destination = $fileSettings['uri_scheme'] . '://' 
				. $fileSettings['file_directory'] . '/' . $filename; 

			//save the file, replacing if it already exists in the drupal file system
			$file = file_save_data($rendered, $destination, FILE_EXISTS_REPLACE);

			//reference the file in the file field to push to S3
			$violations = $fileField->appendItem($file)->validate();

			if(count($violations)) {
				drupal_set_message('error saving file');
			}

		}

	}
	
}

//TODO: add predelete hook to warn user before deleting a node that generated a file
//
//